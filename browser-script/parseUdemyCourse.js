
async function parseUdemyCourse(maxSections = 0) {
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
    async function waitForElement(selector, timeout = 10000) {
      return new Promise((resolve) => {
        const startTime = Date.now();
        const checkInterval = setInterval(() => {
          const element = document.querySelector(selector);
          if (element || Date.now() - startTime > timeout) {
            clearInterval(checkInterval);
            resolve(element);
          }
        }, 100);
      });
    }
  
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∫–ª–∏–∫–∞ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É
    async function safeClick(element, description = '—ç–ª–µ–º–µ–Ω—Ç') {
      try {
        if (!element) {
          console.warn(`–≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –∫–ª–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${description}`);
          return false;
        }
  
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∏–¥–∏–º –ª–∏ —ç–ª–µ–º–µ–Ω—Ç
        const rect = element.getBoundingClientRect();
        if (rect.width === 0 || rect.height === 0) {
          console.warn(`–≠–ª–µ–º–µ–Ω—Ç –Ω–µ –≤–∏–¥–∏–º: ${description}`);
          return false;
        }
  
        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —ç–ª–µ–º–µ–Ω—Ç—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        element.scrollIntoView({ behavior: 'smooth', block: 'center' });
        await new Promise(resolve => setTimeout(resolve, 500));
  
        // –ö–ª–∏–∫–∞–µ–º
        element.click();
        console.log(`–ö–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω: ${description}`);
        return true;
      } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –ø–æ ${description}:`, error);
        return false;
      }
    }
  
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–∏–¥–µ–æ URL
    async function findVideoUrl() {
      try {
        // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –≤–∏–¥–µ–æ
        const videoSelectors = [
          'video.video-player--video-player--HiAnq',
          'video[controlslist="nodownload"]',
          'video source',
          'video'
        ];
  
        for (const selector of videoSelectors) {
          const videoElement = await waitForElement(selector, 5000);
          if (videoElement) {
            let videoUrl = null;
            
            // –ï—Å–ª–∏ —ç—Ç–æ source —ç–ª–µ–º–µ–Ω—Ç
            if (videoElement.tagName === 'SOURCE') {
              videoUrl = videoElement.src;
            }
            // –ï—Å–ª–∏ —ç—Ç–æ video —ç–ª–µ–º–µ–Ω—Ç
            else if (videoElement.tagName === 'VIDEO') {
              const sourceElement = videoElement.querySelector('source');
              if (sourceElement && sourceElement.src) {
                videoUrl = sourceElement.src;
              } else if (videoElement.src) {
                videoUrl = videoElement.src;
              }
            }
  
            if (videoUrl) {
              console.log('–ù–∞–π–¥–µ–Ω –≤–∏–¥–µ–æ URL:', videoUrl);
              
              // –ï—Å–ª–∏ —ç—Ç–æ blob URL, –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ –æ–±—ã—á–Ω—ã–π URL
              if (videoUrl.startsWith('blob:')) {
                console.log('–û–±–Ω–∞—Ä—É–∂–µ–Ω blob URL, –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ –æ–±—ã—á–Ω—ã–π URL...');
                const udemyVideoUrl = videoUrl.replace('blob:https://epam.udemy.com/', 'https://epam.udemy.com/');
                console.log('–ó–∞–º–µ–Ω–µ–Ω –Ω–∞:', udemyVideoUrl);
                return udemyVideoUrl;
              } else {
                return videoUrl;
              }
            }
          }
        }
  
        return null;
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤–∏–¥–µ–æ URL:', error);
        return null;
      }
    }
  
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞
    async function extractTranscript() {
      try {
        let transcript = '';
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–∞—è –ø–∞–Ω–µ–ª—å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞
        let transcriptPanel = await waitForElement('[data-purpose="transcript-panel"]', 2000);
        
        if (!transcriptPanel) {
          // –ï—Å–ª–∏ –ø–∞–Ω–µ–ª—å –Ω–µ –æ—Ç–∫—Ä—ã—Ç–∞, –∫–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞
          const transcriptButton = await waitForElement('[data-purpose="transcript-toggle"]', 3000);
          if (transcriptButton) {
            await safeClick(transcriptButton, '–∫–Ω–æ–ø–∫–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞');
            // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –ø–∞–Ω–µ–ª–∏
            transcriptPanel = await waitForElement('[data-purpose="transcript-panel"]', 5000);
          }
        }
  
        // –ß–∏—Ç–∞–µ–º —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç
        if (transcriptPanel) {
          const transcriptTexts = transcriptPanel.querySelectorAll('[data-purpose="cue-text"]');
          transcript = Array.from(transcriptTexts)
            .map(el => el.textContent?.trim())
            .filter(text => text)
            .join('\n');
        }
  
        return transcript;
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞:', error);
        return '';
      }
    }
  
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É —Å–µ–∫—Ü–∏–π
    async function returnToCourseContent() {
      try {
        const courseContentButton = document.evaluate(
          '//span[text()="Course content"]',
          document,
          null,
          XPathResult.FIRST_ORDERED_NODE_TYPE,
          null
        ).singleNodeValue;
        
        if (courseContentButton) {
          const button = courseContentButton.closest("button");
          if (button) {
            await safeClick(button, '–∫–Ω–æ–ø–∫–∞ Course content');
            // –ü–∞—É–∑–∞ 4 —Å–µ–∫—É–Ω–¥—ã
            await new Promise(resolve => setTimeout(resolve, 4000));
          }
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –∫ Course content:', error);
      }
    }
  
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ Course content
    async function clickCourseContentButton() {
      try {
        console.log('–ò—â–µ–º –∫–Ω–æ–ø–∫—É "Course content"...');
  
        // –ò—â–µ–º –∫–Ω–æ–ø–∫—É —á–µ—Ä–µ–∑ XPath
        let courseContentButton = document.evaluate(
          '//span[text()="Course content"]',
          document,
          null,
          XPathResult.FIRST_ORDERED_NODE_TYPE,
          null
        ).singleNodeValue;
  
        if (!courseContentButton) {
          // –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π XPath
          courseContentButton = document.evaluate(
            '//span[contains(text(), "Course content")]',
            document,
            null,
            XPathResult.FIRST_ORDERED_NODE_TYPE,
            null
          ).singleNodeValue;
  
          if (!courseContentButton) {
            console.log('–ö–Ω–æ–ø–∫–∞ "Course content" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ —á–µ—Ä–µ–∑ XPath');
            return {
              success: false,
              error: '–ö–Ω–æ–ø–∫–∞ "Course content" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞',
            };
          }
        }
  
        console.log("–ö–Ω–æ–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞ —á–µ—Ä–µ–∑ XPath", courseContentButton);
        console.log("–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏", courseContentButton.textContent);
  
        // –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ
        const button = courseContentButton.closest("button");
        if (button) {
          button.click();
          console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "Course content" –≤—ã–ø–æ–ª–Ω–µ–Ω');
          return { success: true, message: "–ö–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω" };
        } else {
          return {
            success: false,
            error: "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –∫–ª–∏–∫–∞",
          };
        }
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –ø–æ –∫–Ω–æ–ø–∫–µ Course content", error);
        return { success: false, error: error.message };
      }
    }
  
    // ==== –û–°–ù–û–í–ù–ê–Ø –õ–û–ì–ò–ö–ê –ü–ê–†–°–ò–ù–ì–ê ====
    try {
      console.log("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –∫—É—Ä—Å–∞ Udemy...");
      console.log(`–ù–∞—Å—Ç—Ä–æ–π–∫–∏: maxSections = ${maxSections} (0 = –≤—Å–µ —Å–µ–∫—Ü–∏–∏)`);
      
      // 1. –°–Ω–∞—á–∞–ª–∞ –∫–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ Course content
      const clickResult = await clickCourseContentButton();
      if (!clickResult.success) {
        throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å Course content");
      }
      
      console.log("‚úÖ Course content –æ—Ç–∫—Ä—ã—Ç, –∂–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏...");
      await new Promise(resolve => setTimeout(resolve, 2000));
  
      const courseData = {
        title: document.title,
        url: window.location.href,
        sections: [],
        extractedAt: new Date().toISOString()
      };
  
      // 2. –ò—â–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —Å–µ–∫—Ü–∏—è–º–∏
      const curriculumContainer = document.querySelector('[data-purpose="curriculum-section-container"]');
      if (!curriculumContainer) {
        throw new Error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä curriculum-section-container –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
  
      // 3. –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Å–µ–∫—Ü–∏–∏
      const sectionPanels = curriculumContainer.querySelectorAll('[data-purpose^="section-panel-"]');
      console.log(`üìö –ù–∞–π–¥–µ–Ω–æ ${sectionPanels.length} —Å–µ–∫—Ü–∏–π`);
  
      if (sectionPanels.length === 0) {
        throw new Error('–°–µ–∫—Ü–∏–∏ –∫—É—Ä—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      }
  
      // 4. –¶–∏–∫–ª –ø–æ —Å–µ–∫—Ü–∏—è–º (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π maxSections)
      const sectionsToProcess = maxSections === 0 ? sectionPanels.length : Math.min(maxSections, sectionPanels.length);
      console.log(`üìã –ë—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${sectionsToProcess} —Å–µ–∫—Ü–∏–π –∏–∑ ${sectionPanels.length}`);
      
      for (let sectionIndex = 0; sectionIndex < sectionsToProcess; sectionIndex++) {
        // –ó–∞–Ω–æ–≤–æ –Ω–∞—Ö–æ–¥–∏–º —Å–µ–∫—Ü–∏–∏ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É
        const curriculumContainer = document.querySelector('[data-purpose="curriculum-section-container"]');
        const currentSectionPanels = curriculumContainer?.querySelectorAll('[data-purpose^="section-panel-"]');
        
        if (!currentSectionPanels || sectionIndex >= currentSectionPanels.length) {
          console.warn(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–µ–∫—Ü–∏—é ${sectionIndex}`);
          continue;
        }
        
        const sectionPanel = currentSectionPanels[sectionIndex];
        
        try {
          // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
          const sectionTitle = sectionPanel.querySelector('.ud-accordion-panel-title')?.textContent?.trim() || `–°–µ–∫—Ü–∏—è ${sectionIndex + 1}`;
          console.log(`\nüìÇ [${sectionIndex + 1}/${sectionsToProcess}] –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏—é: ${sectionTitle}`);
          
          const sectionData = {
            title: sectionTitle,
            items: []
          };
  
          // –ö–ª–∏–∫–∞–µ–º –Ω–∞ —Å–µ–∫—Ü–∏—é —á—Ç–æ–±—ã —Ä–∞—Å–∫—Ä—ã—Ç—å
          const sectionTitleElement = sectionPanel.querySelector('.ud-accordion-panel-title');
          if (sectionTitleElement) {
            await safeClick(sectionTitleElement, `—Å–µ–∫—Ü–∏—è "${sectionTitle}"`);
          } else {
            console.warn(`–ù–µ –Ω–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç —Å –∫–ª–∞—Å—Å–æ–º ud-accordion-panel-title –¥–ª—è —Å–µ–∫—Ü–∏–∏ "${sectionTitle}"`);
            await safeClick(sectionPanel, `—Å–µ–∫—Ü–∏—è "${sectionTitle}"`);
          }
          
          // –ü–∞—É–∑–∞ 4 —Å–µ–∫—É–Ω–¥—ã
          await new Promise(resolve => setTimeout(resolve, 4000));
  
          // 5. –ò—â–µ–º —Å–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤–Ω—É—Ç—Ä–∏ —Å–µ–∫—Ü–∏–∏
          const itemsList = sectionPanel.querySelector('.ud-unstyled-list');
          if (itemsList) {
            const listItems = itemsList.querySelectorAll('li');
            console.log(`   üìù –ù–∞–π–¥–µ–Ω–æ ${listItems.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–µ–∫—Ü–∏–∏`);
  
            // 6-13. –¶–∏–∫–ª –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º
            for (let itemIndex = 0; itemIndex < listItems.length; itemIndex++) {
              // –ó–∞–Ω–æ–≤–æ –Ω–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É
              const currentSectionPanel = document.querySelector(`[data-purpose="section-panel-${sectionIndex}"]`);
              const currentItemsList = currentSectionPanel?.querySelector('.ud-unstyled-list');
              const currentListItems = currentItemsList?.querySelectorAll('li');
              
              if (!currentListItems || itemIndex >= currentListItems.length) {
                console.warn(`   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç ${itemIndex} –≤ —Å–µ–∫—Ü–∏–∏ ${sectionTitle}`);
                continue;
              }
              
              const listItem = currentListItems[itemIndex];
              
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –∫–Ω–æ–ø–∫—É "Resources" (—ç–ª–µ–º–µ–Ω—Ç—ã —Ç–æ–ª—å–∫–æ —Å —Ä–µ—Å—É—Ä—Å–∞–º–∏, –±–µ–∑ –≤–∏–¥–µ–æ)
              const resourcesButton = listItem.querySelector('button[aria-label="Resource list"]');
              if (resourcesButton) {
                console.log(`   ‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Ç–æ–ª—å–∫–æ —Å —Ä–µ—Å—É—Ä—Å–∞–º–∏: ${itemIndex}`);
                continue;
              }
              
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —ç–ª–µ–º–µ–Ω—Ç —Å–ª–æ–≤–æ "Quiz"
              const itemTitle = listItem.querySelector('[data-purpose="item-title"]')?.textContent?.trim() || '';
              if (itemTitle.toLowerCase().includes('quiz')) {
                console.log(`   ‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å Quiz: ${itemTitle}`);
                continue;
              }
              
              try {
                // 7. –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–∞
                const itemTitle = listItem.querySelector('[data-purpose="item-title"]')?.textContent?.trim() || `–≠–ª–µ–º–µ–Ω—Ç ${itemIndex + 1}`;
                console.log(`   üé¨ [${itemIndex + 1}/${listItems.length}] –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${itemTitle}`);
  
                // 8. –ö–ª–∏–∫–∞–µ–º –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç
                const itemTitleElement = listItem.querySelector('[data-purpose="item-title"]');
                if (itemTitleElement) {
                  await safeClick(itemTitleElement, `—ç–ª–µ–º–µ–Ω—Ç "${itemTitle}"`);
                } else {
                  console.warn(`–ù–µ –Ω–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç —Å data-purpose="item-title" –¥–ª—è "${itemTitle}"`);
                  await safeClick(listItem, `—ç–ª–µ–º–µ–Ω—Ç "${itemTitle}"`);
                }
                
                // –ü–∞—É–∑–∞ 2 —Å–µ–∫—É–Ω–¥—ã
                await new Promise(resolve => setTimeout(resolve, 2000));
  
                // 9. –ò—â–µ–º –≤–∏–¥–µ–æ
                const videoUrl = await findVideoUrl();
  
                // 10-12. –†–∞–±–æ—Ç–∞–µ–º —Å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–æ–º
                const transcript = await extractTranscript();
  
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç–∞
                sectionData.items.push({
                  title: itemTitle,
                  videoUrl: videoUrl,
                  transcript: transcript,
                  dataPurpose: listItem.getAttribute('data-purpose') || `item-${itemIndex}`
                });
  
                console.log(`      ‚úÖ –í–∏–¥–µ–æ: ${videoUrl ? '–Ω–∞–π–¥–µ–Ω–æ' : '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'}, –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç: ${transcript.length} —Å–∏–º–≤–æ–ª–æ–≤`);
                
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É —Å–µ–∫—Ü–∏–π –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
                await returnToCourseContent();
                
              } catch (itemError) {
                console.error(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —ç–ª–µ–º–µ–Ω—Ç–∞ ${itemIndex}:`, itemError);
                continue;
              }
            }
          }
  
          courseData.sections.push(sectionData);
          console.log(`   ‚úÖ –°–µ–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞: ${sectionData.items.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ`);
          
        } catch (sectionError) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–µ–∫—Ü–∏–∏ ${sectionIndex}:`, sectionError);
          continue;
        }
      }
  
      console.log('\nüéâ –ü–∞—Ä—Å–∏–Ω–≥ –∫—É—Ä—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω!');
      console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
      console.log(`   - –°–µ–∫—Ü–∏–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${courseData.sections.length}`);
      const totalItems = courseData.sections.reduce((sum, section) => sum + section.items.length, 0);
      console.log(`   - –í—Å–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${totalItems}`);
      
      console.log('\nüì¶ –†–µ–∑—É–ª—å—Ç–∞—Ç (–æ–±—ä–µ–∫—Ç courseData):');
      console.log(courseData);
      
      window.courseData = courseData;
      return courseData;
  
    } catch (error) {
      console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –∫—É—Ä—Å–∞:', error);
      return { error: error.message };
    }
  }
  
  // ========================================
  // –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ:
  // ========================================
  // 1. –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫—É—Ä—Å–∞ –Ω–∞ Udemy
  // 2. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)
  // 3. –í—Å—Ç–∞–≤—å—Ç–µ –≤–µ—Å—å —ç—Ç–æ—Ç –∫–æ–¥ –∏ –Ω–∞–∂–º–∏—Ç–µ Enter
  // 4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –æ–¥–Ω–∏–º –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤:
  //
  //    –ü–∞—Ä—Å–∏—Ç—å –í–°–ï —Å–µ–∫—Ü–∏–∏:
  //    await parseUdemyCourse(0)
  //    
  //    –ü–∞—Ä—Å–∏—Ç—å —Ç–æ–ª—å–∫–æ –ü–ï–†–í–£–Æ —Å–µ–∫—Ü–∏—é:
  //    await parseUdemyCourse(1)
  //    
  //    –ü–∞—Ä—Å–∏—Ç—å –ø–µ—Ä–≤—ã–µ 3 —Å–µ–∫—Ü–∏–∏:
  //    await parseUdemyCourse(3)
  //
  // 5. –†–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω –≤ –∫–æ–Ω—Å–æ–ª—å
  // ========================================
  
  // –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –Ω—É–∂–Ω—É—é —Å—Ç—Ä–æ–∫—É):
  // parseUdemyCourse(1).then(data => console.log('–ì–æ—Ç–æ–≤–æ!', data));  // –ü–µ—Ä–≤–∞—è —Å–µ–∫—Ü–∏—è
  // parseUdemyCourse(0).then(data => console.log('–ì–æ—Ç–æ–≤–æ!', data));  // –í—Å–µ —Å–µ–∫—Ü–∏–∏